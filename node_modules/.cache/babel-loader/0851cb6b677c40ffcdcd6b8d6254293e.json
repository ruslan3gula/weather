{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\RG\\\\react tutorial\\\\weather-forecast-rugu\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\RG\\\\react tutorial\\\\weather-forecast-rugu\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\RG\\\\react tutorial\\\\weather-forecast-rugu\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\RG\\\\react tutorial\\\\weather-forecast-rugu\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles.css\"; // import axios from \"axios\";\n\nimport AutosuggestionField from \"./AutosuggestionField\";\nimport { cityApi } from \"./api\";\nimport { weatherApi } from \"./weatherApi\";\nimport Weather from \"./Weather\"; // import FreeSoloCreateOption from \"./FreeSoloCreateOption\";\n\nexport default function App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        city = _useState2[0],\n        setCity = _useState2[1];\n\n  const _useState3 = useState(\"КАИР\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedCity = _useState4[0],\n        setSelectedCity = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        weather = _useState6[0],\n        setWeather = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        error = _useState8[0],\n        setError = _useState8[1];\n\n  useEffect(() => {\n    const asyncFunction = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var cities, selectedWeather;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return cityApi();\n\n            case 3:\n              cities = _context.sent;\n              setCity(cities);\n              _context.next = 7;\n              return weatherApi(selectedCity);\n\n            case 7:\n              selectedWeather = _context.sent;\n              setError(null);\n              setWeather(selectedWeather);\n              _context.next = 16;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              setError(_context.t0);\n              setWeather(null);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 12]]);\n      }));\n\n      return function asyncFunction() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    asyncFunction();\n  }, [selectedCity]);\n\n  const getSelectedCity = value => {\n    setSelectedCity(value);\n  };\n\n  const celsius = () => {\n    if (weather) {\n      console.log(\"celsius\", weather.main.temp - 273.15);\n      return weather.main.temp - 273.15;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: typeof weather !== \"undefined\" ? celsius() > 15 ? \"app warm\" : \"app cold\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AutosuggestionField, {\n    city: city,\n    getSelectedCity: getSelectedCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), weather && /*#__PURE__*/React.createElement(Weather, {\n    weather: weather,\n    getSelectedCity: getSelectedCity,\n    city: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, \"City \".concat(error.message))));\n}","map":{"version":3,"sources":["D:/RG/react tutorial/weather-forecast-rugu/src/App.js"],"names":["React","useEffect","useState","AutosuggestionField","cityApi","weatherApi","Weather","App","city","setCity","selectedCity","setSelectedCity","weather","setWeather","error","setError","asyncFunction","cities","selectedWeather","getSelectedCity","value","celsius","console","log","main","temp","message"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,cAAP,C,CACA;;AAEA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,oBACJL,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,QACrBM,IADqB;AAAA,QACfC,OADe;;AAAA,qBAEYP,QAAQ,CAAC,MAAD,CAFpB;AAAA;AAAA,QAErBQ,YAFqB;AAAA,QAEPC,eAFO;;AAAA,qBAGET,QAAQ,EAHV;AAAA;AAAA,QAGrBU,OAHqB;AAAA,QAGZC,UAHY;;AAAA,qBAIFX,QAAQ,EAJN;AAAA;AAAA,QAIrBY,KAJqB;AAAA,QAIdC,QAJc;;AAM5Bd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,aAAa;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEGZ,OAAO,EAFV;;AAAA;AAEZa,cAAAA,MAFY;AAGlBR,cAAAA,OAAO,CAACQ,MAAD,CAAP;AAHkB;AAAA,qBAKYZ,UAAU,CAACK,YAAD,CALtB;;AAAA;AAKZQ,cAAAA,eALY;AAMlBH,cAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,cAAAA,UAAU,CAACK,eAAD,CAAV;AAPkB;AAAA;;AAAA;AAAA;AAAA;AASlBH,cAAAA,QAAQ,aAAR;AACAF,cAAAA,UAAU,CAAC,IAAD,CAAV;;AAVkB;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAbG,aAAa;AAAA;AAAA;AAAA,OAAnB;;AAaAA,IAAAA,aAAa;AACd,GAfQ,EAeN,CAACN,YAAD,CAfM,CAAT;;AAiBA,QAAMS,eAAe,GAAIC,KAAD,IAAW;AACjCT,IAAAA,eAAe,CAACS,KAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAG,MAAM;AACpB,QAAIT,OAAJ,EAAa;AACXU,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBX,OAAO,CAACY,IAAR,CAAaC,IAAb,GAAoB,MAA3C;AACA,aAAOb,OAAO,CAACY,IAAR,CAAaC,IAAb,GAAoB,MAA3B;AACD;AACF,GALD;;AAOA,sBACE;AACE,IAAA,SAAS,EACP,OAAOb,OAAP,KAAmB,WAAnB,GACES,OAAO,KAAK,EAAZ,GACE,UADF,GAEE,UAHJ,GAIE,EANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,mBAAD;AAAqB,IAAA,IAAI,EAAEb,IAA3B;AAAiC,IAAA,eAAe,EAAEW,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGGP,OAAO,iBACN,oBAAC,OAAD;AACE,IAAA,OAAO,EAAEA,OADX;AAEE,IAAA,eAAe,EAAEO,eAFnB;AAGE,IAAA,IAAI,EAAEX,IAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAUGM,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAcA,KAAK,CAACY,OAApB,EAVZ,CARF,CADF;AAuBD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\n// import axios from \"axios\";\n\nimport AutosuggestionField from \"./AutosuggestionField\";\nimport { cityApi } from \"./api\";\nimport { weatherApi } from \"./weatherApi\";\nimport Weather from \"./Weather\";\n// import FreeSoloCreateOption from \"./FreeSoloCreateOption\";\n\nexport default function App() {\n  const [city, setCity] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(\"КАИР\");\n  const [weather, setWeather] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    const asyncFunction = async () => {\n      try {\n        const cities = await cityApi();\n        setCity(cities);\n\n        const selectedWeather = await weatherApi(selectedCity);\n        setError(null);\n        setWeather(selectedWeather);\n      } catch (err) {\n        setError(err);\n        setWeather(null);\n      }\n    };\n    asyncFunction();\n  }, [selectedCity]);\n\n  const getSelectedCity = (value) => {\n    setSelectedCity(value);\n  };\n\n  const celsius = () => {\n    if (weather) {\n      console.log(\"celsius\", weather.main.temp - 273.15);\n      return weather.main.temp - 273.15;\n    }\n  };\n\n  return (\n    <div\n      className={\n        typeof weather !== \"undefined\"\n        ? celsius() > 15\n          ? \"app warm\"\n          : \"app cold\"\n        : \"\"}\n    >\n      <main>\n        <AutosuggestionField city={city} getSelectedCity={getSelectedCity} />\n\n        {weather && (\n          <Weather\n            weather={weather}\n            getSelectedCity={getSelectedCity}\n            city={city}\n          />\n        )}\n        {error && <div>{`City ${error.message}`}</div>}\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}