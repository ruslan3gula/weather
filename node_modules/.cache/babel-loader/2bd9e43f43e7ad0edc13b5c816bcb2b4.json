{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\RG\\\\react tutorial\\\\weather-forecast-rugu\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\RG\\\\react tutorial\\\\weather-forecast-rugu\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nexport function weatherApi(_x) {\n  return _weatherApi.apply(this, arguments);\n}\n\nfunction _weatherApi() {\n  _weatherApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(selectedCity) {\n    var data, weather;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(selectedCity, \"&appid=7eccebbd42ed7e547dea8ed526d54fcb\"));\n\n        case 3:\n          data = _context.sent;\n          weather = data.data;\n          return _context.abrupt(\"return\", weather);\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0.response);\n\n          if (!(_context.t0 && _context.t0.response && _context.t0.response.statusText)) {\n            _context.next = 13;\n            break;\n          }\n\n          throw Error(_context.t0.response.statusText);\n\n        case 13:\n          throw Error(_context.t0.message || \"Unknown error\");\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n  return _weatherApi.apply(this, arguments);\n}","map":{"version":3,"sources":["D:/RG/react tutorial/weather-forecast-rugu/src/weatherApi.js"],"names":["axios","weatherApi","selectedCity","get","data","weather","console","log","response","statusText","Error","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,gBAAsBC,UAAtB;AAAA;AAAA;;;yEAAO,iBAA0BC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEgBF,KAAK,CAACG,GAAN,6DACoCD,YADpC,6CAFhB;;AAAA;AAEGE,UAAAA,IAFH;AAKGC,UAAAA,OALH,GAKaD,IAAI,CAACA,IALlB;AAAA,2CAMIC,OANJ;;AAAA;AAAA;AAAA;AAQPC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAEC,QAAd;;AARO,gBASC,eAAK,YAAEA,QAAP,IAAmB,YAAEA,QAAF,CAAWC,UAT/B;AAAA;AAAA;AAAA;;AAAA,gBAUKC,KAAK,CAAC,YAAEF,QAAF,CAAWC,UAAZ,CAVV;;AAAA;AAAA,gBAYGC,KAAK,CAAC,YAAEC,OAAF,IAAa,eAAd,CAZR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from \"axios\";\r\n\r\nexport async function weatherApi(selectedCity) {\r\n  try {\r\n    const data = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${selectedCity}&appid=7eccebbd42ed7e547dea8ed526d54fcb`\r\n    );\r\n    const weather = data.data;\r\n    return weather;\r\n  } catch (e) {\r\nconsole.log(e.response);\r\n    if (e && e.response && e.response.statusText) {\r\n      throw Error(e.response.statusText);\r\n    }\r\n    throw Error(e.message || \"Unknown error\");\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}