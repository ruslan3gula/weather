{"ast":null,"code":"import _slicedToArray from \"D:\\\\RG\\\\react tutorial\\\\weather-forecast-rugu\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\RG\\\\react tutorial\\\\weather-forecast-rugu\\\\src\\\\AutosuggestionField.js\";\n\n/* eslint-disable no-use-before-define */\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nexport default function AutosuggestionField(props) {\n  const city = props.city;\n  const getSelectedCity = props.getSelectedCity;\n\n  const _React$useState = React.useState(\"\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        inputValue = _React$useState2[0],\n        setInputValue = _React$useState2[1]; // const [value, setValue] = React.useState(null);\n  // console.log(value);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"free-solo-demo\",\n    freeSolo: false,\n    options: city,\n    clearOnBlur: true,\n    selectOnFocus: true,\n    autoSelect: true,\n    inputValue: inputValue,\n    onChange: (event, newValue) => {\n      getSelectedCity(newValue);\n    },\n    onInputChange: (event, newInputValue) => {\n      setInputValue(newInputValue);\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"search city...\",\n      margin: \"normal\" // variant=\"outlined\"\n      ,\n      className: \"search-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/RG/react tutorial/weather-forecast-rugu/src/AutosuggestionField.js"],"names":["React","TextField","Autocomplete","AutosuggestionField","props","city","getSelectedCity","useState","inputValue","setInputValue","event","newValue","newInputValue","params"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA,QACzCC,IADyC,GAChCD,KADgC,CACzCC,IADyC;AAAA,QAEzCC,eAFyC,GAErBF,KAFqB,CAEzCE,eAFyC;;AAAA,0BAGbN,KAAK,CAACO,QAAN,CAAe,EAAf,CAHa;AAAA;AAAA,QAG1CC,UAH0C;AAAA,QAG9BC,aAH8B,wBAIjD;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,EAAE,EAAC,gBADL;AAEE,IAAA,QAAQ,EAAE,KAFZ;AAGE,IAAA,OAAO,EAAEJ,IAHX;AAIE,IAAA,WAAW,MAJb;AAKE,IAAA,aAAa,MALf;AAME,IAAA,UAAU,EAAE,IANd;AAOE,IAAA,UAAU,EAAEG,UAPd;AAQE,IAAA,QAAQ,EAAE,CAACE,KAAD,EAAQC,QAAR,KAAqB;AAC7BL,MAAAA,eAAe,CAACK,QAAD,CAAf;AACD,KAVH;AAWE,IAAA,aAAa,EAAE,CAACD,KAAD,EAAQE,aAAR,KAA0B;AACvCH,MAAAA,aAAa,CAACG,aAAD,CAAb;AACD,KAbH;AAcE,IAAA,WAAW,EAAEC,MAAM,iBACjB,oBAAC,SAAD,oBACMA,MADN;AAEE,MAAA,KAAK,EAAC,gBAFR;AAGE,MAAA,MAAM,EAAC,QAHT,CAIE;AAJF;AAKE,MAAA,SAAS,EAAC,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AA4BD","sourcesContent":["/* eslint-disable no-use-before-define */\r\nimport React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nexport default function AutosuggestionField(props) {\r\n  const { city } = props;\r\n  const { getSelectedCity } = props;\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  // const [value, setValue] = React.useState(null);\r\n  // console.log(value);\r\n\r\n  return (\r\n    <div className=\"search-box\">\r\n      <Autocomplete\r\n        id=\"free-solo-demo\"\r\n        freeSolo={false}\r\n        options={city}\r\n        clearOnBlur\r\n        selectOnFocus\r\n        autoSelect={true}\r\n        inputValue={inputValue}\r\n        onChange={(event, newValue) => {\r\n          getSelectedCity(newValue);\r\n        }}\r\n        onInputChange={(event, newInputValue) => {\r\n          setInputValue(newInputValue);\r\n        }}\r\n        renderInput={params => (\r\n          <TextField\r\n            {...params}\r\n            label=\"search city...\"\r\n            margin=\"normal\"\r\n            // variant=\"outlined\"\r\n            className=\"search-bar\"\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}